name: Auto Test Report

on:
  workflow_dispatch:  # Allow manual triggering
  push:
    paths:
      - 'app/**'
      - 'components/**'
      - 'lib/**'
      - 'utils/**'
      - '__tests__/**'
      - 'package.json'
      - 'jest.config.js'
      - 'tsconfig.json'
      - 'test-triggers/**'
      - '.github/workflows/auto-test-report.yml'

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Display environment information
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          
      - name: Install dependencies
        run: npm install
        
      - name: Display test files
        run: |
          echo "Tests directory contents:"
          find __tests__ -type f -name "*.test.js" -o -name "*.test.ts" -o -name "*.test.jsx" -o -name "*.test.tsx"
          
      - name: Run tests
        run: |
          # Create test results directory
          mkdir -p test-results
          
          # Run tests with different outputs
          echo "Running tests with JSON output..."
          npm test -- --json --outputFile=test-results/jest-output.json || true
          
          echo "Running tests with verbose output..."
          npm test -- --verbose > test-results/detailed-output.txt || true
          
          echo "Test outputs:"
          ls -la test-results/
          
      - name: Process test results
        run: |
          echo "Creating test summary..."
          
          # Simple summary if the JSON parsing fails
          if [ ! -f "test-results/jest-output.json" ]; then
            echo "{\"error\": \"No test results generated\", \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"}" > test-results/summary.json
            echo "# Test Results\n\nNo test results were generated. This could indicate a setup issue." > test-results/report.md
          else
            # Create a basic summary from the Jest output
            node -e '
              try {
                const fs = require("fs");
                const results = JSON.parse(fs.readFileSync("test-results/jest-output.json", "utf8"));
                
                const summary = {
                  timestamp: new Date().toISOString(),
                  totalTests: results.numTotalTests || 0,
                  passedTests: results.numPassedTests || 0,
                  failedTests: results.numFailedTests || 0,
                  testResults: results.testResults || []
                };
                
                fs.writeFileSync("test-results/summary.json", JSON.stringify(summary, null, 2));
                
                let markdownReport = `# Test Results\n\n## Summary\n- Total: ${summary.totalTests}\n- Passed: ${summary.passedTests}\n- Failed: ${summary.failedTests}\n`;
                
                if (summary.failedTests > 0) {
                  markdownReport += "\n## Failures\n";
                  for (const result of summary.testResults) {
                    if (result.status === "failed") {
                      markdownReport += `\n### ${result.name}\n${result.message || "No error details available"}\n`;
                    }
                  }
                }
                
                fs.writeFileSync("test-results/report.md", markdownReport);
              } catch (error) {
                console.error("Error processing results:", error);
                fs.writeFileSync("test-results/error.txt", "Error: " + error.toString());
                fs.writeFileSync("test-results/summary.json", JSON.stringify({
                  error: error.toString(),
                  timestamp: new Date().toISOString()
                }, null, 2));
              }
            '
          fi
          
          echo "Test processing complete"
          echo "Contents of test-results directory:"
          ls -la test-results/
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          
      - name: Commit test results
        run: |
          echo "Committing test results..."
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add test-results/
          git commit -m "Update test results [skip ci]" || echo "No changes to commit"
          git push